<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="d_tanabe.sched_mgmt.repository.UsersMapper">
	<!-- マッピング -->
	<resultMap type="d_tanabe.sched_mgmt.model.Users"
		id="loginUser">
		<id column="id" property="id" />
		<result column="account_name" property="accountName" />
		<result column="user_name" property="userName" />
		<result column="password" property="password" />
		<result column="role" property="role" />
		<result column="status" property="status" />
	</resultMap>
	<!-- 検索条件を元にユーザー管理テーブルからユーザー情報を取得(複数件) -->
	<select id="selectByUser" resultType="Users">
		select *,
		count(*) over() as total_users
		from users
		where status in ('1'
		<if test="status != null">
			,#{status}
		</if>
			)
		<if test="userId != null">
			AND id = #{userId}
		</if>
		<if test="accountName != null">
			AND account_name LIKE CONCAT('%',#{accountName}, '%')
		</if>
		<if test="userName != null">
			AND user_name LIKE CONCAT('%',#{userName}, '%')
		</if>
		order by id
		limit #{perPage}
		OFFSET #{currentPage}
	</select>
	<!-- ユーザー管理テーブルからユーザー情報を取得(一件) -->
	<select id="findByAccountName" resultMap="loginUser">
		select * from users where account_name = #{accountName}
	</select>
	<!-- ユーザーIDからユーザー情報を検索する(一件) -->
	<select id="findByUserId" resultMap="loginUser">
		select * from users where id = #{userId}
	</select>
	<!-- ユーザーIDからパスワードを取得する(一件) -->
	<select id="findPassByUserId" resultType="String">
		select password from users where id = #{userId}
	</select>
	<!-- ユーザー情報を登録する -->
	<insert id="signUpUser">
		insert into users(account_name, user_name, password, role, status)
		values (#{accountName}, #{userName}, #{password}, #{role}, #{status})
	</insert>
	<!-- ユーザー情報を更新する -->
	<update id="upDateUser">
		update users set account_name = #{accountName}, user_name = #{userName},
		role = #{role}, status = #{status}
		where id = #{id}
	</update>
	<!-- パスワードを更新する -->
	<update id="upDatePassword">
		update users set password = #{password}
		where id = #{userId}
	</update>
	<delete id="deleteUser">
		delete from users where id = #{userId}
	</delete>
</mapper>